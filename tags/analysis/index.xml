<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Analysis on spektre's Blog</title><link>https://www.sanjayvardhan.github.io/tags/analysis/</link><description>Recent content in Analysis on spektre's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 02 Jan 2024 06:24:00 +0530</lastBuildDate><atom:link href="https://www.sanjayvardhan.github.io/tags/analysis/index.xml" rel="self" type="application/rss+xml"/><item><title>The Holy Hole - Analysis of CVE-2023-2033</title><link>https://www.sanjayvardhan.github.io/post/cve-2023-2033/</link><pubDate>Tue, 02 Jan 2024 06:24:00 +0530</pubDate><guid>https://www.sanjayvardhan.github.io/post/cve-2023-2033/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>I have been following v8 exploits related to hole for sometime now and I found CVE-2023-2033 really interesting. So I thought documenting whatever I learn while doing the analysis of this CVE will help me understand it even better.&lt;/p>
&lt;h3 id="hole">Hole&lt;/h3>
&lt;p>Generally in JavaScript, A Hole to an empty slot in an array. These holes are different from &lt;code>undefined&lt;/code> or &lt;code>null&lt;/code> values, which are actual values that can be assigned to array elements.&lt;/p></description></item></channel></rss>
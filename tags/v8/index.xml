<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>V8 on spektre's Blog</title><link>https://www.sanjayvardhan.github.io/tags/v8/</link><description>Recent content in V8 on spektre's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 22 Aug 2024 16:55:07 +0530</lastBuildDate><atom:link href="https://www.sanjayvardhan.github.io/tags/v8/index.xml" rel="self" type="application/rss+xml"/><item><title>CTFZone Quals 2024 - Wasminator</title><link>https://www.sanjayvardhan.github.io/post/wasminator/</link><pubDate>Thu, 22 Aug 2024 16:55:07 +0530</pubDate><guid>https://www.sanjayvardhan.github.io/post/wasminator/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>I tried this challenge during the CTF but wasnt able to solve it. The challenge had 0 solves in the end. So I tried solving it after the CTF ended.&lt;/p>
&lt;h2 id="patch-analysis">Patch Analysis&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-patch=" data-lang="patch=">diff --git a/src/objects/objects.cc b/src/objects/objects.cc
index 71c4b37adcc..0f670bdd7d1 100644
--- a/src/objects/objects.cc
+++ b/src/objects/objects.cc
@@ -2228,8 +2228,9 @@ Maybe&amp;lt;bool&amp;gt; Object::SetPropertyInternal(LookupIterator* it,
 }
 
 case LookupIterator::WASM_OBJECT:
- RETURN_FAILURE(it-&amp;gt;isolate(), kThrowOnError,
- NewTypeError(MessageTemplate::kWasmObjectsAreOpaque));
+ //RETURN_FAILURE(it-&amp;gt;isolate(), kThrowOnError,
+ // NewTypeError(MessageTemplate::kWasmObjectsAreOpaque));
+ return SetDataProperty(it, value);
 
 case LookupIterator::INTERCEPTOR: {
 if (it-&amp;gt;HolderIsReceiverOrHiddenPrototype()) {
&lt;/code>&lt;/pre>&lt;p>With this patch, instead of returning a failure and throwing a &lt;code>TypeError&lt;/code> indicating that WASM objects are opaque, the code now calls &lt;code>SetDataProperty(it, value)&lt;/code>, allowing us to modify the properties of the &lt;code>WASM_OBJECT&lt;/code>.&lt;/p></description></item><item><title>V8 Internals - Understanding V8 Compiler Pipeline</title><link>https://www.sanjayvardhan.github.io/post/v8-internals-1/v8_internals_1/</link><pubDate>Tue, 02 Jan 2024 06:32:41 +0530</pubDate><guid>https://www.sanjayvardhan.github.io/post/v8-internals-1/v8_internals_1/</guid><description>&lt;h1 id="understanding-v8s-compiler-pipeline">Understanding V8&amp;rsquo;s Compiler Pipeline&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>V8 is the JavaScript engine powering browsers like Google Chrome, Brave, and Microsoft Edge. This series of blog posts will go into the internals of V8. This first part will be giving an overview of the V8 Compiler Pipeline.&lt;/p>
&lt;h2 id="compiler-pipeline">Compiler Pipeline&lt;/h2>
&lt;p>&lt;img src="V8_Internals_1/Untitled-2023-08-13-1007.png" alt="Pipeline">&lt;/p>
&lt;h3 id="high-level-overview-the-life-cycle-of-a-javascript-source-in-the-v8-engine">High-Level Overview: The Life Cycle of a JavaScript Source in the V8 Engine&lt;/h3>
&lt;p>Just-In-Time (JIT) Compilation involves executing bytecode through an interpreter VM, which is slower than running machine code directly. Most compilers, including V8, follow a similar initial compilation pipeline:&lt;/p></description></item><item><title>The Holy Hole - Analysis of CVE-2023-2033</title><link>https://www.sanjayvardhan.github.io/post/cve-2023-2033/</link><pubDate>Tue, 02 Jan 2024 06:24:00 +0530</pubDate><guid>https://www.sanjayvardhan.github.io/post/cve-2023-2033/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>I have been following v8 exploits related to hole for sometime now and I found CVE-2023-2033 really interesting. So I thought documenting whatever I learn while doing the analysis of this CVE will help me understand it even better.&lt;/p>
&lt;h3 id="hole">Hole&lt;/h3>
&lt;p>Generally in JavaScript, A Hole to an empty slot in an array. These holes are different from &lt;code>undefined&lt;/code> or &lt;code>null&lt;/code> values, which are actual values that can be assigned to array elements.&lt;/p></description></item></channel></rss>
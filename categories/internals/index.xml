<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Internals on spektre's Blog</title><link>https://www.sanjayvardhan.github.io/categories/internals/</link><description>Recent content in Internals on spektre's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 02 Jan 2024 06:32:41 +0530</lastBuildDate><atom:link href="https://www.sanjayvardhan.github.io/categories/internals/index.xml" rel="self" type="application/rss+xml"/><item><title>V8 Internals - Understanding V8 Compiler Pipeline</title><link>https://www.sanjayvardhan.github.io/post/v8-internals-1/v8_internals_1/</link><pubDate>Tue, 02 Jan 2024 06:32:41 +0530</pubDate><guid>https://www.sanjayvardhan.github.io/post/v8-internals-1/v8_internals_1/</guid><description>&lt;h1 id="understanding-v8s-compiler-pipeline">Understanding V8&amp;rsquo;s Compiler Pipeline&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>V8 is the JavaScript engine powering browsers like Google Chrome, Brave, and Microsoft Edge. This series of blog posts will go into the internals of V8. This first part will be giving an overview of the V8 Compiler Pipeline.&lt;/p>
&lt;h2 id="compiler-pipeline">Compiler Pipeline&lt;/h2>
&lt;p>&lt;img src="V8_Internals_1/Untitled-2023-08-13-1007.png" alt="Pipeline">&lt;/p>
&lt;h3 id="high-level-overview-the-life-cycle-of-a-javascript-source-in-the-v8-engine">High-Level Overview: The Life Cycle of a JavaScript Source in the V8 Engine&lt;/h3>
&lt;p>Just-In-Time (JIT) Compilation involves executing bytecode through an interpreter VM, which is slower than running machine code directly. Most compilers, including V8, follow a similar initial compilation pipeline:&lt;/p></description></item></channel></rss>